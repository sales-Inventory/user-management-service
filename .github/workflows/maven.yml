# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: user-management-service ci cd flow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  SI_CLUSTER: sales-inventory
  SI_ZONE: us-central1-c
  DEPLOYEMENT_NAME: github-action-sales-inventory-deployement
  IMAGE: user-management-service
  TAG: latest

jobs:
  build:
    env:
      ACTION_TOKEN: ${{secrets.ACTION_TOKEN}}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: conf/admin.conf
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{secrets.GKE_SA_KEY}}
          project_id: ${{secrets.GKE_PROJECT}}

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn --settings settings.xml clean install -DskipTests

      - name: Setup Google Cloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          service_account_key: ${{secrets.GKE_SA_KEY}}
          project_id: ${{secrets.GKE_PROJECT}}

      - name: Configure Docker
        run: gcloud --quiet auth configure-docker

      - name: Get SI Credentials
        run: gcloud container clusters get-credentials "$SI_CLUSTER" --zone "$SI_ZONE"

#      - name: Build & push Docker image
#        uses: mr-smithers-excellent/docker-build-push@v5
#        with:
#          image: janithsenanyaka/user-management-service
#          tags: latest
#          registry: docker.io
#          dockerfile: Dockerfile
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: |-
            docker build --tag "gcr.io/temporal-genius-312707/user-management-service:prod" .

      - name: Publish Docker Image to GCR
        run: |-
            docker push "gcr.io/temporal-genius-312707/user-management-service:prod"

      - name: deploy image to cluster
        run: |-
           kubectl apply -f deployment.yml 
           kubectl rollout restart deployment user-management-service

              



